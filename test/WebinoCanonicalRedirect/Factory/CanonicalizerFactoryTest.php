<?php
/**
 * Webino (http://webino.sk)
 *
 * @link        https://github.com/webino/WebinoCanonicalRedirect for the canonical source repository
 * @copyright   Copyright (c) 2014 Webino, s. r. o. (http://webino.sk)
 * @author      Peter Bačinský <peter@bacinsky.sk>
 * @license     BSD-3-Clause
 */

namespace WebinoCanonicalRedirect\Factory;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-12-06 at 17:33:29.
 */
class CanonicalizerFactoryTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var CanonicalizerFactory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new CanonicalizerFactory;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers WebinoCanonicalRedirect\Factory\CanonicalizerFactory::createService
     * @todo   Implement testCreateService().
     */
    public function testCreateService()
    {
        $request  = $this->getMock('Zend\Http\PhpEnvironment\Request');
        $services = $this->getMock('Zend\ServiceManager\ServiceManager');

        $services->expects($this->once())
            ->method('get')
            ->with('Request')
            ->will($this->returnValue($request));

        $request->expects($this->once())
            ->method('getUri')
            ->will($this->returnValue($this->getMock('Zend\Uri\Uri')));

        $request->expects($this->once())
            ->method('getBaseUrl')
            ->will($this->returnValue(''));

        $canonicalizer = $this->object->createService($services);
        $this->assertInstanceOf('WebinoCanonicalRedirect\Uri\Canonicalizer', $canonicalizer);
    }
}
